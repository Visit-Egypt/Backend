name: Tests
on: [push]



jobs:
  test:
    name: Run Python Tests
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Setup timezone
      uses: zcong1993/setup-timezone@master
      with:
        timezone: UTC

    - name: Set up Python 3.10.2
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.2

    - name: Install Python dependencies
      run: |
        sudo apt install -y $(grep -o ^[^#][[:alnum:]-]* "packages.list")
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        # python -m spacy download en_core_web_sm
        # python -m spacy download en
        
    - name: Test with pytest
      run: |
        echo "Testing Placeholder"
  BuildDocker:
    needs: [test]
    if: github.ref == 'refs/heads/master'  
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: visitegypt/backend:latest

  DeployToServer:
    needs: [test, BuildDocker]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy docker container to the erver
        uses: fifsky/ssh-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_NOTIFICATION_PLATFORM_ARN: ${{ secrets.AWS_NOTIFICATION_PLATFORM_ARN }}
          AWS_NOTIFICATION_TOPIC_ARN: ${{ secrets.AWS_NOTIFICATION_TOPIC_ARN }}
          AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAX_CONNECTIONS_COUNT: ${{ secrets.MAX_CONNECTIONS_COUNT }}
          MIN_CONNECTIONS_COUNT: ${{ secrets.MIN_CONNECTIONS_COUNT }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          SECRET_KEY:  ${{ secrets.SECRET_KEY }}
        with:
          command: |
            sudo docker rm backend-container
            sudo docker run -d -p 80:80 -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" -e AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION" -e AWS_NOTIFICATION_PLATFORM_ARN="$AWS_NOTIFICATION_PLATFORM_ARN" -e AWS_NOTIFICATION_TOPIC_ARN="$AWS_NOTIFICATION_TOPIC_ARN" -e AWS_REGION_NAME="$AWS_REGION_NAME" -e AWS_S3_BUCKET_NAME="$AWS_S3_BUCKET_NAME" -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" -e CLIENT_ID="$CLIENT_ID" -e DB_CONNECTION="$DB_CONNECTION" -e MAIL_FROM="$MAIL_FROM" -e MAIL_PASSWORD="$MAIL_PASSWORD" -e MAIL_USERNAME="$MAIL_USERNAME" -e MAX_CONNECTIONS_COUNT="$MAX_CONNECTIONS_COUNT" -e MIN_CONNECTIONS_COUNT="$MIN_CONNECTIONS_COUNT" -e PROJECT_NAME="$PROJECT_NAME" -e SECRET_KEY="$SECRET_KEY" --name backend-container visitegypt/backend:latest
          host: ${{ secrets.HOST }}
          user: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY}}
  deploy:
    # If the test & lint jobs don't pass,
    # the deploy job willn't even execute
    needs: [test]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploying to Heroku
        # More details available at:
        # https://github.com/akhileshns/heroku-deploy
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key:  ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "visit-egypt"
          heroku_email: "geekahmed1@gmail.com"
          healthcheck: "https://visit-egypt.herokuapp.com/api/status"
          rollbackonhealthcheckfailed: true
